library("datasets")
iris
iris()
iris3
library("datasets")
demo()
plot.TukeyHSD
library(help = "datasets").
library(help = "datasets")
iris
crimtab
1+1
[1:10]
c(1:10)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "StormData.csv")
file.exists("StormData.csv")
setwd("~/R/Projects/RepData_PeerAssessment2")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "StormData.csv")
storm_data <- read.csv("StormData.csv")
casualties <- aggregate(data = storm_data, formula = FATALITIES + INJURIES ~ EVTYPE, FUN = sum)
casualties <- aggregate(data = storm_data, formula = cbind(FATALITIES, INJURIES) ~ EVTYPE, FUN = sum)
casualties <- aggregate(FATALITIES + INJURIES ~ EVTYPE, data = storm_data, sum)
casualties <- aggregate(cbind(FATALITIES, INJURIES) ~ EVTYPE, data = storm_data, sum)
casualties <- aggregate(FATALITIES + INJURIES ~ EVTYPE, data = storm_data, sum)
harmful_events <- aggregate(FATALITIES + INJURIES ~ EVTYPE, data = storm_data, sum)
names(harmful_events)[2] <- "human_damage"
harmful_events <- aggregate(cbind(FATALITIES + INJURIES, PROPDMG + CROPDMG) ~ EVTYPE, data = storm_data, sum)
names(harmful_events)[2] <- "population_damage"
names(harmful_events)[3] <- "economic_damage"
head(harmful_events[order(harmful_events$population_damage, decreasing = T), ], 10)
head(harmful_events[order(harmful_events$economic_damage, decreasing = T), ], 10)
library("dplyr")
library("plyr")
treated_data <- mutate(storm_data,
PROPDMG = (ifelse(toupper(PROPDMGEXP) == 'K', PROPDMG * 10^3,
ifelse(toupper(PROPDMGEXP) == 'M', PROPDMG * 10^6,
ifelse(toupper(PROPDMGEXP) == 'B', PROPDMG * 10^9,
PROPDMG)))
))
treated_data <- mutate(treated_data,
CROPDMG = (ifelse(toupper(CROPDMGEXP) == 'K', CROPDMG * 10^3,
ifelse(toupper(CROPDMGEXP) == 'M', CROPDMG * 10^6,
ifelse(toupper(CROPDMGEXP) == 'B', CROPDMG * 10^9,
CROPDMG)))
))
harmful_events <- aggregate(cbind(FATALITIES, INJURIES, PROPDMG, CROPDMG, FATALITIES + INJURIES, PROPDMG + CROPDMG) ~ EVTYPE, data = treated_data, sum)
names(harmful_events)[6] <- "population_damage"
names(harmful_events)[7] <- "economic_damage"
top_popdamange <- head(harmful_events[order(harmful_events$population_damage, decreasing = T), ], 10)
library(reshape2)
top_pop_damage_melted <- melt(data = top_popdamange, id.vars = c("EVTYPE")
)
library ggplot2
library("ggplot2")
library(ggplot2)
qplot(data = top_pop_damage_melted,
x = EVTYPE,
y = value,
facets = . ~ variable,
fill = "blue",
xlab = "Event",
ylab = "Total Population damage",
main = "The mos harmful events by population")
qplot(data = top_pop_damage_melted,
x = EVTYPE,
y = value,
facets =  variable ~ .,
fill = "blue",
xlab = "Event",
ylab = "Total Population damage",
main = "The mos harmful events by population")
qplot(data = top_pop_damage_melted,
x = EVTYPE,
y = value,
geom = "line",
facets = variable ~ .,
fill = "blue",
xlab = "Event",
ylab = "Total Population damage",
main = "The mos harmful events by population")
qplot(data = top_pop_damage_melted,
x = EVTYPE,
y = value,
geom = "bar",
facets = variable ~ .,
fill = "blue",
xlab = "Event",
ylab = "Total Population damage",
main = "The mos harmful events by population")
ggplot(data = top_pop_damage_melted,
aes(x = EVTYPE, y = value) +
facet_grid(variable ~ .) +
geom_bar(fill = "blue", stat = "identity") +
xlab("Event") +
ylab("Total Population damage") +
ggtitle("The mos harmful events by population"))
ggplot(data = top_pop_damage_melted,
aes(x = EVTYPE, y = value) +
geom_bar(fill = "blue", stat = "identity") +
xlab("Event") +
ylab("Total Population damage") +
ggtitle("The mos harmful events by population"))
ggplot(data = top_pop_damage_melted,
aes(x = EVTYPE, y = value)) +
facet_grid(variable ~ .) +
geom_bar(fill = "blue", stat = "identity") +
xlab("Event") +
ylab("Total Population damage") +
ggtitle("The mos harmful events by population")
names(harmful_events)[6] <- "Population Damage"
names(harmful_events)[7] <- "Economic Damage"
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "StormData.csv.bz2")
file <- download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "StormData.csv.bz2", method="curl")
